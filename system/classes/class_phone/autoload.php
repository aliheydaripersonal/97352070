<?php

// autoload.php @generated by Composer

require_once __DIR__ . '/composer' . '/autoload_real.php';

ComposerAutoloaderInit92528e548f7275c9967a168bd0fa0a61::getLoader();

class phone
{
	public $phoneUtil;
	public function __construct()
	{
		GLOBAL $C;
		$this->phoneUtil = \libphonenumber\PhoneNumberUtil::getInstance();
		return $this->phoneUtil;
		
	}
	function parse($country_code,$phone){
		try{
			$swissNumberProto = $this->phoneUtil->parse($phone, $country_code);
			return $this->phoneUtil->format($swissNumberProto, \libphonenumber\PhoneNumberFormat::E164);
		}catch(Exception $e) {
			return false;
		}
	}
	function check($country_code,$phone){
		try{
			$swissNumberProto = $this->phoneUtil->parse($phone, $country_code);
			return $this->phoneUtil->isValidNumber($swissNumberProto);
		}catch(Exception $E){
			return false;
		}
	}
	function getSupportedRegions($phone, $country_code){
		return $this->phoneUtil->getSupportedRegions();
	}
	function conutry_array(){
		GLOBAL $C;
		$countries = require $C->path_classes.'/class_phone/giggsey/locale/data/en.php';
		return $countries;
	}
	function phone_prefix_by_country_code($country_code){
		$country_code = trim(get_between(($this->phoneUtil->getExampleNumber('IR')),'Country Code: ','National Number:'));
		if(!empty($country_code))
		return $country_code;
		else
		return false;
	}
}
